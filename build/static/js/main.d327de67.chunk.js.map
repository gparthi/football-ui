{"version":3,"sources":["pages/TeamSelection.js","pages/LeagueSelection.js","pages/CountrySelection.js","App.js","index.js"],"names":["TeamSelection","state","teams","selectedTeam","validationError","leagueId","standings","leagueName","countryName","teamId","fetch","this","then","response","console","log","JSON","stringify","json","data","forEach","item","team_id","setState","overall_league_position","league_name","country_name","teamsFromApi","element","push","value","team_key","display","team_name","concat","catch","error","props","updateTeams","style","marginTop","onChange","e","target","options","selectedIndex","innerHTML","fetchStandings","map","team","key","color","React","Component","LeagueSelection","teamSelectionElement","createRef","countryId","league_id","updateLeagues","current","ref","CountrySelection","leagueSelectionElement","country_id","updateInput","App","setAppState","className","handleCountrySelected","name","showLeague","showTeam","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAoIeA,E,4MAhIXC,MAAQ,CACJC,MAAO,GACPC,aAAc,GACdC,gBAAiB,GACjBC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,YAAa,I,6DAGFC,GAAS,IAAD,OACnBC,IAAM,uBAAD,OACsBC,KAAKV,MAAMI,WAEjCO,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAR,kDAAuDC,KAAKC,UAAUJ,KAC/DA,EAASK,UAEnBN,MAAK,SAAAO,GAEFA,EAAKC,SAAQ,SAAAC,GAELA,EAAKC,UAAYb,IAOjB,EAAKc,SAAS,CAAEjB,UAAWe,EAAKG,0BAChC,EAAKD,SAAS,CAAEhB,WAAYc,EAAKI,cACjC,EAAKF,SAAS,CAAEf,YAAaa,EAAKK,wB,kCAQ1CrB,GAAW,IAAD,OAClBS,QAAQC,IAAR,wCAA6CV,IAC7CM,KAAKY,SAAS,CAAElB,SAAUA,IAC1BK,IAAM,mBAAD,OACkBL,IAElBO,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAR,0CAA+CC,KAAKC,UAAUJ,KACvDA,EAASK,UAEnBN,MAAK,SAAAO,GAEF,IAAIQ,EAAe,GACnBR,EAAKC,SAAQ,SAAAQ,GACTd,QAAQC,IAAR,qBAA0Ba,EAAQH,cAClCE,EAAaE,KAAK,CAAEC,MAAOF,EAAQG,SAAUC,QAASJ,EAAQK,eAGlEnB,QAAQC,IAAR,0BAA+BY,IAE/B,EAAKJ,SAAS,CACVrB,MAAO,CACH,CACI4B,MAAO,GACPE,QACI,kBAEVE,OAAOP,QAGhBQ,OAAM,SAAAC,GACHtB,QAAQC,IAAIqB,Q,0CAKpBtB,QAAQC,IAAR,4CAAiDJ,KAAK0B,MAAMhC,WAC5DM,KAAK2B,YAAY3B,KAAK0B,MAAMhC,Y,+BAGtB,IAAD,OAEL,OADAS,QAAQC,IAAR,aAEI,6BACI,4BACIwB,MAAO,CACHC,UAAW,QAGfV,MAAOnB,KAAKV,MAAME,aAClBsC,SAAU,SAAAC,GACN,EAAKnB,SAAS,CACVpB,aAAcuC,EAAEC,OAAOb,MACvB1B,gBACuB,KAAnBsC,EAAEC,OAAOb,MACH,4BACA,KANH,MASwBY,EAAEC,OAA7BC,EATG,EASHA,QAASC,EATN,EASMA,cACjB/B,QAAQC,IAAI6B,EAAQC,GAAeC,WACnC,EAAKC,eAAeL,EAAEC,OAAOb,SAKhCnB,KAAKV,MAAMC,MAAM8C,KAAI,SAAAC,GAAI,OACtB,4BACIC,IAAKD,EAAKnB,MACVA,MAAOmB,EAAKnB,OAEXmB,EAAKjB,aAIlB,yBACIO,MAAO,CACHY,MAAO,OACPX,UAAW,SAGd7B,KAAKV,MAAMO,YANhB,IAM8BG,KAAKV,MAAMM,WANzC,IAMsDI,KAAKV,MAAMK,gB,GAzHrD8C,IAAMC,WC+GnBC,E,kDAvGX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAPVpC,MAAQ,CACJC,MAAO,GACPC,aAAc,GACdC,gBAAiB,IAKjB,EAAKmD,qBAAuBH,IAAMI,YAFnB,E,0DAMLC,GAAY,IAAD,OACrB3C,QAAQC,IAAR,wCAA6C0C,IAC7C/C,IAAM,qBAAD,OACoB+C,IAEpB7C,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAR,0CAA+CC,KAAKC,UAAUJ,KACvDA,EAASK,UAEnBN,MAAK,SAAAO,GAEF,IAAIQ,EAAe,GACnBR,EAAKC,SAAQ,SAAAQ,GACTd,QAAQC,IAAR,qBAA0Ba,EAAQH,cAClCE,EAAaE,KAAK,CAAEC,MAAOF,EAAQ8B,UAAW1B,QAASJ,EAAQH,iBAGnEX,QAAQC,IAAR,0BAA+BY,IAE/B,EAAKJ,SAAS,CACVrB,MAAO,CACH,CACI4B,MAAO,GACPE,QACI,oBAEVE,OAAOP,QAGhBQ,OAAM,SAAAC,GACHtB,QAAQC,IAAIqB,Q,0CAKpBtB,QAAQC,IAAR,4CAAiDJ,KAAK0B,MAAMoB,YAC5D9C,KAAKgD,cAAchD,KAAK0B,MAAMoB,a,+BAIxB,IAAD,OAEL,OADA3C,QAAQC,IAAR,aAEI,6BACI,4BACIwB,MAAO,CACHC,UAAW,QAGfV,MAAOnB,KAAKV,MAAME,aAClBsC,SAAU,SAAAC,GACN,EAAKnB,SAAS,CACVpB,aAAcuC,EAAEC,OAAOb,MACvB1B,gBACuB,KAAnBsC,EAAEC,OAAOb,MACH,8BACA,KANH,MASwBY,EAAEC,OAA7BC,EATG,EASHA,QAASC,EATN,EASMA,cACjB/B,QAAQC,IAAI6B,EAAQC,GAAeC,WAG/B,EAAKS,qBAAqBK,UAC1B9C,QAAQC,IAAI,kBACZ,EAAKwC,qBAAqBK,QAAQtB,YAAYI,EAAEC,OAAOb,UAM9DnB,KAAKV,MAAMC,MAAM8C,KAAI,SAAAC,GAAI,OACtB,4BACIC,IAAKD,EAAKnB,MACVA,MAAOmB,EAAKnB,OAEXmB,EAAKjB,aAMW,KAA5BrB,KAAKV,MAAME,cAAuB,kBAAC,EAAD,CAAe0D,IAAKlD,KAAK4C,qBAAsBlD,SAAUM,KAAKV,MAAME,eAEvG,yBACIoC,MAAO,CACHY,MAAO,MACPX,UAAW,QAGd7B,KAAKV,MAAMG,sB,GAvGFgD,IAAMC,WCiHrBS,E,kDA1GX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IAPVpC,MAAQ,CACJC,MAAO,GACPC,aAAc,GACdC,gBAAiB,IAKjB,EAAK2D,uBAAyBX,IAAMI,YAFrB,E,gEAME,IAAD,OAChB1C,QAAQC,IAAR,wBACAL,IACI,0BAECE,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAR,0CAA+CC,KAAKC,UAAUJ,KACvDA,EAASK,UAEnBN,MAAK,SAAAO,GAEF,IAAIQ,EAAe,GACnBR,EAAKC,SAAQ,SAAAQ,GACTd,QAAQC,IAAR,qBAA0Ba,EAAQF,eAClCC,EAAaE,KAAK,CAAEC,MAAOF,EAAQoC,WAAYhC,QAASJ,EAAQF,kBAGpEZ,QAAQC,IAAR,0BAA+BY,IAE/B,EAAKJ,SAAS,CACVrB,MAAO,CACH,CACI4B,MAAO,GACPE,QACI,oCAEVE,OAAOP,QAGhBQ,OAAM,SAAAC,GACHtB,QAAQC,IAAIqB,Q,+BAId,IAAD,OAEL,OADAtB,QAAQC,IAAR,aAEI,6BACI,yBACIwB,MAAO,CACHY,MAAO,QACPX,UAAW,SAHnB,sBASA,4BACID,MAAO,CACHC,UAAW,QAGfV,MAAOnB,KAAKV,MAAME,aAClBsC,SAAU,SAAAC,GACN,EAAKnB,SAAS,CACVpB,aAAcuC,EAAEC,OAAOb,MACvB1B,gBACuB,KAAnBsC,EAAEC,OAAOb,MACH,yCACA,KANH,MASwBY,EAAEC,OAA7BC,EATG,EASHA,QAASC,EATN,EASMA,cACjB/B,QAAQC,IAAI6B,EAAQC,GAAeC,WAEnC,EAAKT,MAAM4B,YAAYvB,EAAEC,OAAOb,OAC5B,EAAKiC,uBAAuBH,UAC5B9C,QAAQC,IAAI,kBACZ,EAAKgD,uBAAuBH,QAAQD,cAAcjB,EAAEC,OAAOb,UAOlEnB,KAAKV,MAAMC,MAAM8C,KAAI,SAAAC,GAAI,OACtB,4BACIC,IAAKD,EAAKnB,MACVA,MAAOmB,EAAKnB,OAEXmB,EAAKjB,aAKW,KAA5BrB,KAAKV,MAAME,cAAuB,kBAAC,EAAD,CAAiB0D,IAAKlD,KAAKoD,uBAAwBN,UAAW9C,KAAKV,MAAME,eAE5G,yBACIoC,MAAO,CACHY,MAAO,MACPX,UAAW,QAGd7B,KAAKV,MAAMG,sB,GA1GDgD,IAAMC,WCoCtBa,G,wDAlCb,aAAe,IAAD,8BACZ,gBACKC,YAAY,IAFL,E,qDAQZ,OADArD,QAAQC,IAAR,iBAEE,yBAAKqD,UAAU,OACb,kBAAC,EAAD,CAAkBH,YAAatD,KAAK0D,2B,4CAMpBZ,M,kCAIVa,GACV,OAAQA,GACN,IAAK,SACH3D,KAAKY,SAAS,CAAEgD,YAAY,IAC5B,MACF,IAAK,OACH5D,KAAKY,SAAS,CAAEiD,UAAU,IAC1B,MACF,QACE7D,KAAKY,SAAS,CAAEgD,YAAY,EAAOC,UAAU,S,GA/BnCnB,cCClBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d327de67.chunk.js","sourcesContent":["import React from 'react'\nimport fetch from 'node-fetch'\n\nclass TeamSelection extends React.Component {\n    state = {\n        teams: [],\n        selectedTeam: \"\",\n        validationError: \"\",\n        leagueId: \"\",\n        standings: \"\",\n        leagueName: \"\",\n        countryName: \"\"\n    };\n\n    fetchStandings(teamId) {\n        fetch(\n            `/football/standings/${this.state.leagueId}`\n        )\n            .then(response => {\n                console.log(`TeamSelection fetchStandings response - ${JSON.stringify(response)}`)\n                return response.json();\n            })\n            .then(data => {\n\n                data.forEach(item => {\n\n                    if (item.team_id === teamId) {\n                        // this.setState({standings: {\n                        //     Country : item.country_name,\n                        //     LeagueName : item.league_name,\n                        //     Position : item.overall_league_position\n\n                        // }})\n                        this.setState({ standings: item.overall_league_position })\n                        this.setState({ leagueName: item.league_name })\n                        this.setState({ countryName: item.country_name })\n\n                    }\n\n                })\n            })\n    }\n\n    updateTeams(leagueId) {\n        console.log(`LeagueSelection updateLeagues ${leagueId}`)\n        this.setState({ leagueId: leagueId })\n        fetch(\n            `/football/teams/${leagueId}`\n        )\n            .then(response => {\n                console.log(`in componentDidMount response - ${JSON.stringify(response)}`)\n                return response.json();\n            })\n            .then(data => {\n\n                let teamsFromApi = []\n                data.forEach(element => {\n                    console.log(`element is ${element.league_name}`)\n                    teamsFromApi.push({ value: element.team_key, display: element.team_name });\n                });\n\n                console.log(`teamsFromApi is ${teamsFromApi}`)\n\n                this.setState({\n                    teams: [\n                        {\n                            value: \"\",\n                            display:\n                                \"(Select Team)\"\n                        }\n                    ].concat(teamsFromApi)\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n        console.log(`LeagueSelection componentDidMount ${this.props.leagueId}`)\n        this.updateTeams(this.props.leagueId)\n    }\n\n    render() {\n        console.log(`in render`)\n        return (\n            <div>\n                <select\n                    style={{\n                        marginTop: \"10px\"\n                    }}\n\n                    value={this.state.selectedTeam}\n                    onChange={e => {\n                        this.setState({\n                            selectedTeam: e.target.value,\n                            validationError:\n                                e.target.value === \"\"\n                                    ? \"You must select your team\"\n                                    : \"\"\n                        })\n\n                        const { options, selectedIndex } = e.target;\n                        console.log(options[selectedIndex].innerHTML);\n                        this.fetchStandings(e.target.value)\n                       // alert(`you have selected ${e.target.value} and its key is ${options[selectedIndex].text}`)\n                    }\n                    }\n                >\n                    {this.state.teams.map(team => (\n                        <option\n                            key={team.value}\n                            value={team.value}\n                        >\n                            {team.display}\n                        </option>\n                    ))}\n                </select>\n                <div\n                    style={{\n                        color: \"blue\",\n                        marginTop: \"10px\"\n                    }}\n                >\n                    {this.state.countryName} {this.state.leagueName} {this.state.standings}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TeamSelection\n","import React from 'react'\nimport fetch from 'node-fetch'\nimport TeamSelection from './TeamSelection'\n\nclass LeagueSelection extends React.Component {\n    state = {\n        teams: [],\n        selectedTeam: \"\",\n        validationError: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.teamSelectionElement = React.createRef();\n\n    }\n\n    updateLeagues(countryId) {\n        console.log(`LeagueSelection updateLeagues ${countryId}`)\n        fetch(\n            `/football/leagues/${countryId}`\n        )\n            .then(response => {\n                console.log(`in componentDidMount response - ${JSON.stringify(response)}`)\n                return response.json();\n            })\n            .then(data => {\n\n                let teamsFromApi = []\n                data.forEach(element => {\n                    console.log(`element is ${element.league_name}`)\n                    teamsFromApi.push({ value: element.league_id, display: element.league_name });\n                });\n\n                console.log(`teamsFromApi is ${teamsFromApi}`)\n\n                this.setState({\n                    teams: [\n                        {\n                            value: \"\",\n                            display:\n                                \"(Select League)\"\n                        }\n                    ].concat(teamsFromApi)\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n        console.log(`LeagueSelection componentDidMount ${this.props.countryId}`)\n        this.updateLeagues(this.props.countryId)\n\n    }\n\n    render() {\n        console.log(`in render`)\n        return (\n            <div>\n                <select\n                    style={{\n                        marginTop: \"10px\"\n                    }}\n\n                    value={this.state.selectedTeam}\n                    onChange={e => {\n                        this.setState({\n                            selectedTeam: e.target.value,\n                            validationError:\n                                e.target.value === \"\"\n                                    ? \"You must select your league\"\n                                    : \"\"\n                        })\n\n                        const { options, selectedIndex } = e.target;\n                        console.log(options[selectedIndex].innerHTML);\n                        //    alert(`you have selected ${e.target.value} and its key is ${options[selectedIndex].text}`)\n\n                        if (this.teamSelectionElement.current) {\n                            console.log('u[dafe ifs0i09')\n                            this.teamSelectionElement.current.updateTeams(e.target.value)\n                        }\n\n                    }\n                    }\n                >\n                    {this.state.teams.map(team => (\n                        <option\n                            key={team.value}\n                            value={team.value}\n                        >\n                            {team.display}\n                        </option>\n                    ))}\n                </select>\n\n\n                {this.state.selectedTeam !== \"\" && <TeamSelection ref={this.teamSelectionElement} leagueId={this.state.selectedTeam} />}\n\n                <div\n                    style={{\n                        color: \"red\",\n                        marginTop: \"5px\"\n                    }}\n                >\n                    {this.state.validationError}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeagueSelection\n","import React from 'react'\nimport fetch from 'node-fetch'\nimport LeagueSelection from './LeagueSelection'\n\nclass CountrySelection extends React.Component {\n    state = {\n        teams: [],\n        selectedTeam: \"\",\n        validationError: \"\"\n    };\n\n    constructor(props) {\n        super(props)\n        this.leagueSelectionElement = React.createRef();\n\n    }\n\n    componentDidMount() {\n        console.log(`in componentDidMount`)\n        fetch(\n            \"/football/getCountries\"\n        )\n            .then(response => {\n                console.log(`in componentDidMount response - ${JSON.stringify(response)}`)\n                return response.json();\n            })\n            .then(data => {\n\n                let teamsFromApi = []\n                data.forEach(element => {\n                    console.log(`element is ${element.country_name}`)\n                    teamsFromApi.push({ value: element.country_id, display: element.country_name });\n                });\n\n                console.log(`teamsFromApi is ${teamsFromApi}`)\n\n                this.setState({\n                    teams: [\n                        {\n                            value: \"\",\n                            display:\n                                \"(Select your favourite country)\"\n                        }\n                    ].concat(teamsFromApi)\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        console.log(`in render`)\n        return (\n            <div>\n                <div\n                    style={{\n                        color: \"black\",\n                        marginTop: \"40px\"\n                    }}\n                >\n                    Football Standings\n                </div>\n\n                <select\n                    style={{\n                        marginTop: \"10px\"\n                    }}\n\n                    value={this.state.selectedTeam}\n                    onChange={e => {\n                        this.setState({\n                            selectedTeam: e.target.value,\n                            validationError:\n                                e.target.value === \"\"\n                                    ? \"You must select your favourite country\"\n                                    : \"\"\n                        })\n\n                        const { options, selectedIndex } = e.target;\n                        console.log(options[selectedIndex].innerHTML);\n                        //alert(`you have selected ${e.target.value} and its key is ${options[selectedIndex].text}`)\n                        this.props.updateInput(e.target.value)\n                        if (this.leagueSelectionElement.current) {\n                            console.log('u[dafe ifs0i09')\n                            this.leagueSelectionElement.current.updateLeagues(e.target.value)\n                        }\n\n\n                    }\n                    }\n                >\n                    {this.state.teams.map(team => (\n                        <option\n                            key={team.value}\n                            value={team.value}\n                        >\n                            {team.display}\n                        </option>\n                    ))}\n                </select>\n\n                {this.state.selectedTeam !== \"\" && <LeagueSelection ref={this.leagueSelectionElement} countryId={this.state.selectedTeam} />}\n\n                <div\n                    style={{\n                        color: \"red\",\n                        marginTop: \"5px\"\n                    }}\n                >\n                    {this.state.validationError}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CountrySelection","import React, { Component } from 'react';\nimport CountrySelection from './pages/CountrySelection'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.setAppState('')\n  }\n\n\n  render() {\n    console.log(`render in App`)\n    return (\n      <div className=\"App\">\n        <CountrySelection updateInput={this.handleCountrySelected} />\n \n      </div>\n    );\n  }\n\n  handleCountrySelected(countryId){\n   // alert(`Country ID of ${countryId} is selected`)\n  }\n\n  setAppState(name) {\n    switch (name) {\n      case 'league':\n        this.setState({ showLeague: true })\n        break\n      case 'team':\n        this.setState({ showTeam: true })\n        break\n      default:\n        this.setState({ showLeague: false, showTeam: false })\n        break\n    }\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}